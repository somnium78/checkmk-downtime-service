name: Build Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debhelper devscripts build-essential

      - name: Build Debian package
        run: |
          dpkg-buildpackage -us -uc -b
          mv ../*.deb ./

      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: "*.deb"

  build-rpm:
    runs-on: ubuntu-latest
    container: centos:7
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          yum install -y rpm-build rpmdevtools systemd

      - name: Setup RPM build environment
        run: |
          rpmdev-setuptree
          cp rpm/checkmk-downtime-service.spec ~/rpmbuild/SPECS/

      - name: Create source tarball
        run: |
          VERSION=$(grep Version debian/control | cut -d' ' -f2)
          tar --exclude='.git' --exclude='debian' --exclude='rpm' \
              -czf ~/rpmbuild/SOURCES/checkmk-downtime-service-${VERSION}.tar.gz .

      - name: Build RPM package
        run: |
          rpmbuild -ba ~/rpmbuild/SPECS/checkmk-downtime-service.spec
          cp ~/rpmbuild/RPMS/noarch/*.rpm ./

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm-package
          path: "*.rpm"

  create-release:
    needs: [build-deb, build-rpm]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Download DEB package
        uses: actions/download-artifact@v4
        with:
          name: debian-package

      - name: Download RPM package
        uses: actions/download-artifact@v4
        with:
          name: rpm-package

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.deb
            *.rpm
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
